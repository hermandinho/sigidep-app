version: "3.4"

services:
  sigidep-certbot:
    container_name: sigidep-certbot
    image: certbot/certbot:latest
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf/:/etc/letsencrypt
      - ./certbot/logs/:/var/log/letsencrypt
      - ./certbot/data:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  sigidep-api:
    container_name: sigidep-api
    build:
      context: packages/sigidep-api
      dockerfile: Dockerfile.local
      args:
        NODE_ENV: ${ENV}
    restart: unless-stopped
    env_file: .env
    environment:
      - API_PORT=$API_PORT
      - NODE_ENV=$ENV
    volumes:
      - ./packages/sigidep-api/src:/usr/src/app/src
    networks:
      - sigidep-network
    ports:
      - "${API_PORT}:${API_PORT:-3000}"
  #    command: yarn start:dev

  sigidep-client:
    container_name: sigidep-client
    build:
      context: ./packages/sigidep-client
      dockerfile: Dockerfile.local
      args:
        NODE_ENV: ${ENV}
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=$ENV
    volumes:
      - ./packages/sigidep-client/src:/usr/src/app/src
      - "./nginx/dev:/etc/nginx/conf.d"
    networks:
      - sigidep-network
    ports:
      - "${FRONT_PORT}:4200"
  #    command: yarn start

  sigidep-db:
    image: postgres:12-alpine
    restart: unless-stopped
    container_name: sigidep-db
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - sigidep-network
    command: -p $DB_PORT

  # ================= ADMIN =================
  sigidep-pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: sigidep-pgadmin
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - sigidep-db
    networks:
      - sigidep-network

# ================= VOLUMES =================
volumes:
  pgdata:
  pgadmin:
# ================= NETWORKS =================
networks:
  sigidep-network:
    driver: bridge
